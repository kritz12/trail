:where(.m-typeset) {
	font-family: var(--font-family);
	margin: 0;
}

.m-typeset :where(pre:not([class]), code:not([class])) {
	font-family: var(--font-family-code);
}

// Headings
:where(.m-typeset)
	:where(
		h1:not([class]),
		h2:not([class]),
		h3:not([class]),
		h4:not([class]),
		h5:not([class]),
		h6:not([class])
	) {
	font-feature-settings: var(--font-features-reduced);
	@include m-font-style(heading);
	color: var(--color-text);
}

// Heading Margins
:where(.m-typeset)
	:where(h2:not([class]), h3:not([class]), h4:not([class]), h5:not([class]), h6:not([class])) {
	margin: 0.5em 0;
}
:where(.m-typeset)
	*
	+ :where(h2:not([class]), h3:not([class]), h4:not([class]), h5:not([class]), h6:not([class])) {
	margin-block-start: 1.5rem;
}

// Body Style
:where(.m-typeset)
	:where(
		p:not([class]),
		li:not([class]),
		dt:not([class]),
		dd:not([class]),
		blockquote:not([class]),
		figcaption:not([class]),
		small:not([class]),
		pre:not([class]),
		code:not([class]),
		cite:not([class]),
		small:not([class])
	) {
	font-size: var(--font-size-m);
	font-feature-settings: var(--font-features);
	@include m-font-style(text);
	color: var(--color-text);
}

// Apply measure to normal paragraphs
:where(.m-typeset) :where(p:not([class])) {
	max-inline-size: var(--size-measure-content-m);
}

// Body Margins
:where(.m-typeset)
	:where(
		p:not([class]),
		li:not([class]),
		dt:not([class]),
		dd:not([class]),
		blockquote:not([class]),
		figcaption:not([class]),
		small:not([class]),
		pre:not([class]),
		code:not([class]),
		cite:not([class]),
		small:not([class])
	) {
	margin: 0.85em 0;
}
:where(.m-typeset) :where(dd:not([class])) {
	margin-inline-start: 0.85em;
}

// Heading Sizes
:where(.m-typeset h1:not([class])) {
	font-size: var(--font-size-xxxl);
}
:where(.m-typeset h2:not([class])) {
	font-size: var(--font-size-xxl);
}
:where(.m-typeset h3:not([class])) {
	font-size: var(--font-size-xl);
}
:where(.m-typeset) :where(h4:not([class]), blockquote:not([class])) {
	font-size: var(--font-size-l);
}
:where(.m-typeset) :where(p:not([class]), h5:not([class])) {
	font-size: var(--font-size-m);
}
:where(.m-typeset h5:not([class])) {
	font-weight: var(--font-weight-heading);
}
:where(.m-typeset) :where(h6:not([class]), figcaption:not([class])) {
	font-size: var(--font-size-s);
	line-height: var(--line-height);
}

// Body Sizes
:where(.m-typeset small:not([class])) {
	font-size: var(--font-size-xs);
}

// Spacing for First/Last items in Typeset
:where(.m-typeset) > :first-child:not([class]) {
	margin-block-start: 0;
}
:where(.m-typeset) > :last-child:not([class]) {
	margin-block-end: 0;
}

:where(.m-typeset)
	:where(ul:not([class]), ol:not([class]), dl:not([class]), blockquote:not([class])) {
	margin: 0.5em 0;
	padding: 0 0 0 1.5em;
}

// Link Styling
:where(.m-typeset a:not([class])) {
	color: var(--color-text-link);
	text-decoration: underline;
}

:where(.m-typeset a:not([class]):hover) {
	text-decoration: none;
}

:where(.m-typeset code:not([class])) {
	overflow-wrap: break-word;
}

:where(.m-typeset pre:not([class]) code:not([class])) {
	white-space: pre-wrap;
	word-break: break-all;
}

:where(.m-typeset) :where(strong:not([class]), b:not([class])) {
	font-weight: var(--font-weight-strong);
}

:where(.m-typeset mark:not([class])) {
	background: var(--color-status-warning-weak);
}

// Code Examples
:where(.m-typeset .example) {
	background: var(--color-background);
	border: 1px solid var(--color-border);
	border-bottom-color: var(--neutral-a4);
	border-radius: var(--radius-l);
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
	overflow: hidden;
	display: block;
	box-sizing: border-box;
	padding: var(--space-m);
	min-height: 10rem;
	max-height: 30rem;
	overflow-y: scroll;
	margin-block-start: 1.5rem;
}

:where(.m-typeset .example + pre[class*='language-']) {
	border: none;
	border-bottom-left-radius: var(--radius-l);
	border-bottom-right-radius: var(--radius-l);
	border-top: none;
	margin-top: 0;
}

:where(.m-typeset) {
	code[class*='language-'],
	pre[class*='language-'] {
	}

	pre[class*='language-'] {
		padding: var(--space-l);
		overflow: auto;
		border: 1px solid var(--color-border);
		border-top: none;
		margin-bottom: var(--space-xxl);
		tab-size: 2;
	}

	// Inline code
	:not(pre) > code:not([class]) {
		background: var(--color-status-highlight-weak);
		color: var(--color-text-highlight);
		padding-inline: var(--space-s);
		align-items: center;
		display: inline-flex;
		border-radius: var(--radius-m);
		white-space: nowrap;
	}
}

/* PrismJS 1.29.0
	https://prismjs.com/download.html#themes=prism-dark&languages=markup+css+clike+javascript+jsx+tsx+scss+typescript */
/**
	 * prism.js Dark theme for JavaScript, CSS and HTML
	 * Based on the slides of the talk “/Reg(exp){2}lained/”
	 * @author Lea Verou
	 */

// :where(.m-typeset) {
// 	code[class*='language-'],
// 	pre[class*='language-'] {
// 		color: var(--color-text);
// 		background: var(--neutral-2);
// 		font: normal 12px/20px var(--font-family-code);
// 		text-align: left;
// 		white-space: pre;
// 		word-spacing: normal;
// 		word-break: normal;
// 		word-wrap: normal;
// 		line-height: 1.5;
// 		tab-size: 2;
// 		hyphens: none;
// 	}
//
// 	pre[class*='language-'],
// 	:not(pre) > code[class*='language-'] {
// 	}
//
// 	/* Code blocks */
// 	pre[class*='language-'] {
// 		padding: var(--space-m);
// 		overflow: auto;
// 		border: 1px solid var(--color-border);
// 		border-top: none;
// 		margin-bottom: var(--space-xxl);
// 	}
//
// 	/* Inline code */
// 	:not(pre) > code[class*='language-'] {
// 		padding-inline: grid-4(2);
// 		border-radius: var(--radius-m);
// 		white-space: normal;
// 	}
//
// 	.token.comment,
// 	.token.prolog,
// 	.token.doctype,
// 	.token.cdata {
// 		color: var(--color-text-muted);
// 	}
//
// 	.token.punctuation {
// 		opacity: 0.7;
// 	}
//
// 	.token.namespace {
// 		opacity: 0.7;
// 	}
//
// 	.token.property,
// 	.token.tag,
// 	.token.boolean,
// 	.token.number,
// 	.token.constant,
// 	.token.symbol {
// 		color: var(--core-red-11);
// 	}
//
// 	.token.selector,
// 	.token.attr-name,
// 	.token.string,
// 	.token.char,
// 	.token.builtin,
// 	.token.inserted {
// 		// color: hsl(75, 70%, 60%);
// 		color: var(--core-indigo-11);
// 	}
//
// 	.token.operator,
// 	.token.entity,
// 	.token.url,
// 	.language-css .token.string,
// 	.style .token.string,
// 	.token.variable {
// 		color: hsl(40, 90%, 60%);
// 	}
//
// 	.token.atrule,
// 	.token.attr-value,
// 	.token.keyword {
// 		color: var(--core-amber-11);
// 	}
//
// 	.token.regex,
// 	.token.important {
// 		color: #e90;
// 	}
//
// 	.token.important,
// 	.token.bold {
// 		font-weight: bold;
// 	}
// 	.token.italic {
// 		font-style: italic;
// 	}
//
// 	.token.entity {
// 		cursor: help;
// 	}
//
// 	.token.deleted {
// 		color: red;
// 	}
// }
