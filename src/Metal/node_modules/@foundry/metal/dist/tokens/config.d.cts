export let transform: {
    'attribute/cti': {
        type: string;
        transformer: (prop: any) => any;
    };
};
export let source: string[];
export namespace platforms {
    namespace core {
        let transformGroup: string;
        let prefix: string;
        let buildPath: string;
        let files: ({
            filter: (token: any) => boolean;
            destination: string;
            format: string;
            mapName?: undefined;
        } | {
            filter: (token: any) => boolean;
            destination: string;
            format: string;
            mapName: string;
        })[];
    }
    namespace semantic {
        let transformGroup_1: string;
        export { transformGroup_1 as transformGroup };
        let buildPath_1: string;
        export { buildPath_1 as buildPath };
        let files_1: {
            filter: (token: any) => boolean;
            destination: string;
            format: string;
        }[];
        export { files_1 as files };
    }
    namespace components {
        let transformGroup_2: string;
        export { transformGroup_2 as transformGroup };
        let buildPath_2: string;
        export { buildPath_2 as buildPath };
        let files_2: {
            filter: (token: any) => boolean;
            destination: string;
            format: string;
        }[];
        export { files_2 as files };
    }
    namespace json {
        let transformGroup_3: string;
        export { transformGroup_3 as transformGroup };
        let buildPath_3: string;
        export { buildPath_3 as buildPath };
        let files_3: {
            filter: (token: any) => boolean;
            destination: string;
            format: string;
        }[];
        export { files_3 as files };
    }
}
